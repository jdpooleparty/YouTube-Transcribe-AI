import re
import argparse
from urllib.parse import urlparse, parse_qs
from youtube_transcript_api import YouTubeTranscriptApi
from youtube_transcript_api.formatters import TextFormatter
import textwrap

# Function to extract YouTube video ID from a URL
def extract_youtube_id(url):
    regex_patterns = [
        r'(?:https?://)?(?:www\.)?youtube\.com/watch\?v=([a-zA-Z0-9_-]+)',  
        r'(?:https?://)?(?:www\.)?youtube\.com/embed/([a-zA-Z0-9_-]+)',     
        r'(?:https?://)?(?:www\.)?youtube\.com/v/([a-zA-Z0-9_-]+)',         
        r'(?:https?://)?(?:www\.)?youtu\.be/([a-zA-Z0-9_-]+)',              
    ]
    
    for pattern in regex_patterns:
        match = re.match(pattern, url)
        if match:
            return match.group(1)

    parsed_url = urlparse(url)
    video_id = parse_qs(parsed_url.query).get('v')
    if video_id:
        return video_id[0]
    
    return None

# Set up argument parser
parser = argparse.ArgumentParser(description="YouTube Transcript Retriever")
parser.add_argument('url', type=str, help='The YouTube URL to extract transcript from')

args = parser.parse_args()
youtube_url = args.url

# Extract the video ID from the URL
video_id = extract_youtube_id(youtube_url)
if video_id is None:
    print("Invalid YouTube URL")
else:
    try:
        transcript_list = YouTubeTranscriptApi.get_transcript(video_id)
        formatter = TextFormatter()
        transcript = formatter.format_transcript(transcript_list)
        
        video_length = len(transcript)
        chunk_size = 4000 if video_length >= 25000 else 2000
        chunks = textwrap.wrap(transcript, chunk_size)
        
        print(chunks)
        
    except Exception as e:
        print(f"An error occurred: {e}")
